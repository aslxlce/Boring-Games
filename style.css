/* ===== FONTS ===== */
/* Importer la police Marvel depuis Google Fonts. */

/* ========= VARIABLES ========= */
/* Définir les variables suivantes globalement pour faciliter leur réutilisation. */
/*
   - Couleur principale : #ed1c24 (rouge Marvel)
   - Largeur des bordures : 0.256rem
   - gutter (espacement entre les éléments) : 2rem
*/

body {
    margin: 1.5vw 2vw 2vw;
    /* Utiliser la police Marvel importée */

    font-family: "Marvel", sans-serif;
    font-weight: 700; /* Texte en gras pour un effet héroïque */
}

/* ==== GRID ==== */
.grid {
    position: relative; /* Pour positionner les enfants correctement */
    /* Créer un conteneur Grid. */

    /* Définir le nombre de colonnes et de lignes. */

    /* Ajouter un espacement entre les éléments. */
}

.grid figure {
    /* Cacher le contenu qui déborde du conteneur */

    /* Utiliser la couleur principale comme arrière-plan */

    position: relative; /* Nécessaire pour les pseudo-éléments */
    transition: 0.2s; /* Effet fluide lors des interactions */
}

.grid figure img {
    vertical-align: middle; /* Aligner correctement l’image */
    /* Faire en sorte que l’image occupe tout l’espace disponible */

    object-fit: cover; /* Maintenir le ratio tout en remplissant l’espace */
    transition: 0.2s; /* Effet fluide lors des transformations */
    will-change: transform; /* Optimisation pour les animations */
    /* Ajouter un clip-path pour créer un cadre stylisé */
    clip-path: polygon(
        var(--border-width) var(--border-width),
        calc(100% - var(--border-width)) var(--border-width),
        calc(100% - var(--border-width)) calc(100% - var(--border-width)),
        var(--border-width) calc(100% - var(--border-width))
    );
}

/* Lorsqu'on survole la figure, réduire légèrement l’image (par exemple 0.95x) */

/* ========= LAYOUT AND CLIP-PATH ======== */

/* Spécifier l’emplacement de chaque élément dans la grille. */
.grid figure:nth-child(1) {
    /* Définir la position dans la grille avec grid-column et grid-row */

    /* clip-path pour une forme personnalisée */
    clip-path: polygon(0 0, 100% 0, 100% 66%, 0% 85%);
}
.grid figure:nth-child(1) img {
    clip-path: polygon(
        var(--border-width) var(--border-width),
        calc(100% - var(--border-width)) var(--border-width),
        calc(100% - var(--border-width)) calc(66% - var(--border-width)),
        var(--border-width) calc(85% - var(--border-width))
    );
}

/* Répéter pour chaque élément en ajustant les positions et les clip-paths */
.grid figure:nth-child(2) {
    /* Définir la position dans la grille avec grid-column et grid-row */
}

.grid figure:nth-child(3) {
    /* Définir la position dans la grille avec grid-column et grid-row */
}

.grid figure:nth-child(4) {
    /* Définir la position dans la grille avec grid-column et grid-row */

    clip-path: polygon(0 22%, 100% 4px, 100% 100%, 0% 100%);
}
.grid figure:nth-child(4) img {
    clip-path: polygon(
        var(--border-width) calc(22% + var(--border-width)),
        calc(100% - var(--border-width)) 7px,
        calc(100% - var(--border-width)) calc(100% - var(--border-width)),
        var(--border-width) calc(100% - var(--border-width))
    );
}

.grid figure:nth-child(5) {
    /* Définir la position dans la grille avec grid-column et grid-row */
}

.grid figure:nth-child(6) {
    /* Définir la position dans la grille avec grid-column et grid-row */
}

.grid figure:nth-child(7) {
    /* Définir la position dans la grille avec grid-column et grid-row */
}

.grid figure:nth-child(8) {
    /* Définir la position dans la grille avec grid-column et grid-row */

    clip-path: polygon(0 0, 100% 0, 88% 100%, 0% 100%);
    width: calc(100% + var(--gutter));
}
.grid figure:nth-child(8) img {
    clip-path: polygon(
        var(--border-width) var(--border-width),
        calc(100% - var(--border-width)) var(--border-width),
        calc(88% - var(--border-width)) calc(100% - var(--border-width)),
        var(--border-width) calc(100% - var(--border-width))
    );
}

.grid figure:nth-child(9) {
    /* Définir la position dans la grille avec grid-column et grid-row */

    clip-path: polygon(12% 0, 100% 0, 100% 100%, 0% 100%);
}
.grid figure:nth-child(9) img {
    clip-path: polygon(
        calc(12% + var(--border-width)) var(--border-width),
        calc(100% - var(--border-width)) var(--border-width),
        calc(100% - var(--border-width)) calc(100% - var(--border-width)),
        var(--border-width) calc(100% - var(--border-width))
    );
}

/* ======= CAPTION ======= */
.grid figcaption {
    /* Positionner la légende en bas à gauche */

    /* Prendre toute la largeur de la figure */

    /* Centrer le texte horizontalement */

    z-index: 2; /* Placer le texte au-dessus des pseudo-éléments */
}

.grid figure:nth-child(1) figcaption {
    bottom: 15%; /* Ajuster la hauteur de la légende */
    height: 17%; /* Ajuster la zone de texte */
    text-align: left; /* Aligner le texte à gauche pour cet élément */
    padding-left: 5%; /* Ajouter un espace intérieur pour un effet visuel */
}

.grid figcaption h3 {
    /* Donner au texte une couleur blanche, une taille adaptée et le rendre gras */

    /* Ajouter un espacement à gauche pour un alignement élégant */

    line-height: 1; /* Contrôler l’espacement entre les lignes */
}

/* Effet de légende (caption effect) */

/* Lorsque la souris survole la figure, le texte et les effets deviennent visibles */
figure:hover figcaption div {
    transform: none; /* Le texte est déplacé dans sa position initiale */
}

/* Les barres animées avant et après deviennent visibles */
figure:hover figcaption:before,
figure:hover figcaption:after {
    transform: scaleY(1); /* Elles s'étendent verticalement */
}

/* Styles initiaux pour les éléments avant et après la légende */
figcaption:before,
figcaption:after {
    content: ""; /* Crée un pseudo-élément vide */
    position: absolute; /* Positionnement absolu dans le conteneur */
    bottom: 0;
    left: 0;
    width: 100%; /* Prend toute la largeur */
    background: rgba(237, 28, 36, 0.4); /* Couleur de fond avec transparence */
    height: 150%; /* Hauteur des barres */
    transition: 0.3s; /* Animation douce */
    transform: scaleY(0); /* Par défaut, les barres sont invisibles */
    transform-origin: bottom; /* L'animation part de la base */
    z-index: -1; /* Place les pseudo-éléments derrière le texte */
}

figcaption:before {
    clip-path: polygon(
        0% 0%,
        100% 15%,
        100% 100%,
        0% 100%
    ); /* Forme de découpe pour l'effet visuel */
}

figcaption:after {
    height: 120%; /* Hauteur différente pour une superposition subtile */
    background: rgba(237, 28, 36, 0.5); /* Couleur légèrement différente pour un contraste */
    clip-path: polygon(0% 15%, 100% 0%, 100% 100%, 0% 100%); /* Autre forme pour l'effet visuel */
}

/* Texte contenu dans la légende (initialement caché) */
figcaption div {
    margin: 0; /* Aucun espace autour du texte */
    transition: 0.3s transform; /* Animation fluide lors de l'apparition */
    will-change: transform; /* Optimisation des performances */
    backface-visibility: hidden; /* Cache le texte lors des transformations */
}

/* Texte principal dans la légende */
figcaption > div {
    overflow: hidden; /* Cache tout ce qui dépasse du conteneur */
    display: inline-block; /* Affichage en bloc aligné */
    transform: translateY(100%); /* Texte initialement positionné en dehors de la vue */
}

/* Texte interne pour l'effet d'animation */
figcaption > div div {
    transform: translateY(-100%); /* Texte glisse depuis le bas lors de l'animation */
    display: inline-block; /* Affichage en bloc aligné */
}
